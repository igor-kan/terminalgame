version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: terminalgame
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Uncomment and configure if using a database
  # db:
  #   image: postgres:15-alpine
  #   container_name: terminalgame-db
  #   environment:
  #     POSTGRES_DB: terminalgame
  #     POSTGRES_USER: ${DB_USER:-postgres}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Uncomment for Redis cache
  # redis:
  #   image: redis:7-alpine
  #   container_name: terminalgame-redis
  #   networks:
  #     - app-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  app-network:
    driver: bridge

# Uncomment if using persistent volumes
# volumes:
#   postgres_data:
#     driver: local